name: Build and Deploy to GKE

on:
  push:
    branches:
      - main  # Run the workflow on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Set up Google Cloud SDK
      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      # Step 3: Authenticate Docker to Google Container Registry
      - name: Authenticate Docker to Google Container Registry
        run: echo "${{ secrets.GCP_SA_KEY }}" | base64 --decode | docker login -u _json_key --password-stdin https://gcr.io

      # Step 4: Build and push Docker image to Google Container Registry (GCR) with POLYGONSCAN_API_KEY argument
      - name: Build and Push Docker Image to GCR
        env:
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        run: |
          IMAGE_NAME=gcr.io/${GCP_PROJECT_ID}/bcw-research-app:latest
          docker build --build-arg POLYGONSCAN_API_KEY=${{ secrets.POLYGONSCAN_API_KEY }} -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      # # Step 5: Configure kubectl to access GKE cluster
      # - name: Configure kubectl to Access GKE Cluster
      #   env:
      #     GKE_CLUSTER_NAME: ${{ secrets.GKE_CLUSTER_NAME }}
      #     GKE_CLUSTER_LOCATION: ${{ secrets.GKE_CLUSTER_LOCATION }}
      #     GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      #   run: |
      #     gcloud container clusters get-credentials $GKE_CLUSTER_NAME --location $GKE_CLUSTER_LOCATION --project $GCP_PROJECT_ID

      # # Step 6: Deploy to GKE
      # - name: Deploy to GKE
      #   env:
      #     GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      #   run: |
      #     # Define Kubernetes deployment manifest
      #     cat <<EOF > k8s-deployment.yml
      #     apiVersion: apps/v1
      #     kind: Deployment
      #     metadata:
      #       name: bcw-research-app
      #     spec:
      #       replicas: 1
      #       selector:
      #         matchLabels:
      #           app: bcw-research-app
      #       template:
      #         metadata:
      #           labels:
      #             app: bcw-research-app
      #         spec:
      #           containers:
      #           - name: bcw-research-app
      #             image: gcr.io/${GCP_PROJECT_ID}/bcw-research-app:latest
      #             ports:
      #             - containerPort: 3000
      #     EOF

      #     # Define Kubernetes service manifest
      #     cat <<EOF > k8s-service.yml
      #     apiVersion: v1
      #     kind: Service
      #     metadata:
      #       name: bcw-research-app-service
      #     spec:
      #       type: LoadBalancer
      #       selector:
      #         app: bcw-research-app
      #       ports:
      #       - protocol: TCP
      #         port: 80
      #         targetPort: 3000
      #     EOF

      #     # Apply the Kubernetes manifests
      #     kubectl apply -f k8s-deployment.yml
      #     kubectl apply -f k8s-service.yml

      # # Step 7: Verify Deployment
      # - name: Verify Deployment
      #   run: kubectl get all
